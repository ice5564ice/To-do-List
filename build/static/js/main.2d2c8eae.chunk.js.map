{"version":3,"sources":["Component/FormData.js","Component/List.js","Component/Todo.js","App.js","index.js"],"names":["FormData","props","useState","modal","setModal","style","width","title","top","visible","footer","onCancel","window","location","reload","onFinish","value","id","Math","floor","random","name","Act","content","Detail","date","Date","console","log","message","info","handleFromSubmit","Item","label","rules","required","type","placeholder","height","margin","border","className","onClick","htmlType","List","datas","isCompelte","removeData","updateData","edit","setEdit","map","data","index","isComplete","actions","Moment","format","Todo","dataToday","setData","show","setshow","localStorage","getItem","JSON","parse","setTodos","useEffect","setItem","stringify","sortDate","length","filterData","sorted","sort","a","b","getTime","newLine","text","Str","i","indees","push","Option","Select","element","today","filter","test","newTodo","defaultValue","onChange","checkItem","insert","j","item","loopItem","updateddatas","newValue","prev","removeArr","success","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d2c8eae.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { DatePicker, message } from 'antd'\r\nimport { Form, Input, Button } from 'antd'\r\nimport { Modal } from 'antd'\r\nimport 'antd/dist/antd.css'\r\nimport TextArea from 'antd/lib/input/TextArea'\r\n\r\nfunction FormData(props) {\r\n    const handleFromSubmit = value => {\r\n        props.onFinish({\r\n            id : Math.floor(Math.random() * 10000),\r\n            name : value.Act,\r\n            content : \"\" + value.Detail,\r\n            date : value.Date\r\n        })\r\n        setModal(false)\r\n        window.location.reload(false);\r\n        console.log(props)\r\n        message.info(`Add your activity success`)\r\n    }\r\n\r\n    const [modal, setModal] = useState(true)\r\n\r\n\r\n    return (\r\n        <div style={{ width: 400 }} >\r\n            <Modal title={<h3>To-do list</h3>} style={{ top: 20 }} visible={modal} footer={null} \r\n            onCancel={() => {\r\n                setModal(false)\r\n                window.location.reload(false)\r\n                }}>\r\n                <Form onFinish={(value) => handleFromSubmit(value)}>\r\n                    <Form.Item name='Act' label='Activity' rules={[{ required: true, message: 'Plase fill your activity' }]}>\r\n                        <Input type='text' placeholder='Your activity'  />\r\n                    </Form.Item>\r\n                    <Form.Item name='Detail' label='Detail'>\r\n                        <TextArea type='text' placeholder='Detail of activity' style={{ height: 100 }} />\r\n                    </Form.Item>\r\n                    <Form.Item name='Date' label=\"Date\" rules={[{ required: true, message: \"Please select activity's date\" }]}>\r\n                        <DatePicker />\r\n                    </Form.Item>\r\n                    <hr style={{ margin:\"50px 0px 0px 0px\", border:\"1px solid #f2f2f2\" }} />\r\n                    <Form.Item>\r\n                        <div className=\"SubmitBtn\">\r\n                            <Button type=\"defualt\" style={{ margin:\"0px 5px 0px 0px\" }} onClick={() => { window.location.reload(false); setModal(false)}} >Cancel</Button>\r\n                            <Button type=\"primary\" htmlType=\"submit\">Submit</Button>    \r\n                        </div>\r\n                    </Form.Item>                   \r\n                </Form>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormData\r\n","import React, {useState} from 'react'\r\nimport Moment from 'moment'\r\nimport { Card } from 'antd'\r\nimport { AiFillCheckCircle } from 'react-icons/ai'\r\nimport { MdEdit } from 'react-icons/md'\r\nimport { MdDelete } from 'react-icons/md'\r\nimport 'antd/dist/antd.css'\r\nimport 'moment-timezone'\r\nimport Form from './FormData'\r\n\r\nfunction List({ datas, isCompelte, removeData, updateData }) {\r\n    const [edit, setEdit] = useState({\r\n        id : null,\r\n        name : '',\r\n        content : '',\r\n        date : null\r\n    })\r\n\r\n    const update = (value) => {\r\n        updateData (edit.id, value.name, value.content, value.date )\r\n        setEdit({\r\n            id : null,\r\n            name : '',\r\n            content : '',\r\n            date : null\r\n        })\r\n    }\r\n\r\n    if(edit.id) {\r\n        return <Form edit={edit} onFinish={update} />\r\n    }\r\n\r\n\r\n    return  datas.map((data, index) => (\r\n        <div key={index}>\r\n            <Card className={ data.isComplete ? \"Card-Complete\" : \"Card\"} key={data.id} title={data.name} style={{ width: 300, margin: 10 }}\r\n                actions={[\r\n                    <MdEdit onClick={() => setEdit({ id: data.id, name: data.name, content: data.content, date: data.date })} className='edit-icon' />,\r\n                    <MdDelete onClick={() => removeData(data.id)} className='delete-icon' />,\r\n                    <AiFillCheckCircle onClick={() => isCompelte(data.id)} />\r\n                ]}\r\n            >\r\n                <p>{data.content}</p>\r\n                <p>{Moment(data.date).format(\"MMMM Do YYYY\")}{\"\"}</p> \r\n            </Card>\r\n        </div>\r\n    ))\r\n}\r\n\r\nexport default List\r\n","import { Button, message } from 'antd'\r\nimport { Select } from 'antd'\r\nimport Moment from 'moment'\r\nimport React, { useState, useEffect } from 'react'\r\nimport FormData from './FormData'\r\nimport List from './List'\r\n\r\n\r\nfunction Todo() {\r\n    const [dataToday, setData] = useState([])\r\n    const [show, setshow] = useState(false)\r\n    const [datas, setTodos] = useState(() => {\r\n        const value = localStorage.getItem(\"storage\") ? JSON.parse(localStorage.getItem(\"storage\")) : []\r\n        return value\r\n    })\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"storage\", JSON.stringify(datas))\r\n        sortDate()\r\n        dataToday.length === 0 ? filterData(\"all\") : window.location.reload(0.1)\r\n        // eslint-disable-next-line \r\n    }, [datas])\r\n\r\n    const addData = data => {\r\n\r\n        if(/^\\s*$/.test(data.name.text) || /^\\s*$/.test(data.content.text)) {\r\n            return;\r\n        }\r\n        \r\n        data.content = newLine(data.content)\r\n        const newTodo = [data, ...datas]\r\n        setTodos(newTodo)\r\n        console.log(data, ...datas);\r\n    }\r\n\r\n    const removeData = id => {\r\n        const removeArr = [...datas].filter(data => data.id !== id)\r\n        setTodos(removeArr)\r\n        message.success(`Delete Complete`)\r\n    }\r\n\r\n    const updateData = (id, name, content, date) => {\r\n        if(/^\\s*$/.test(name.text) || /^\\s*$/.test(content.text)) {\r\n            return;\r\n        }\r\n\r\n        const newValue = {id: id, name: name, content: content, date: date}\r\n        setTodos(prev => prev.map(item => (item.id === id ? newValue : item)))\r\n    }\r\n\r\n    const Complete = id => {\r\n        let updateddatas = datas.map(data => {\r\n            if(data.id === id) {\r\n                data.isComplete = !data.isComplete;\r\n            }\r\n            return data\r\n        })\r\n        setTodos(updateddatas);\r\n    }\r\n\r\n    const sortDate = () => {\r\n        const sorted = datas.sort((a, b) => {\r\n            return new Date(a.date).getTime() - new Date(b.date).getTime()\r\n        })\r\n        setTodos(sorted)\r\n    }\r\n\r\n    const newLine = (text) => {\r\n        let Str = []\r\n        console.log(text)\r\n        if(text !== \"undefined\") {\r\n            for(let i=1; i<text.length; i++) {\r\n                let indees = i-1\r\n                if((i%32) === 0){\r\n                    Str.push(text[indees])\r\n                    Str.push(\" \")\r\n                }\r\n                else {\r\n                    Str.push(text[indees])\r\n                }\r\n            }\r\n        }\r\n        else{\r\n            Str.push(\" \")\r\n        }\r\n        const string = [...Str]\r\n        return  string\r\n    }\r\n\r\n    const { Option } = Select;\r\n\r\n    const loopItem = () => {\r\n        let checkItem = []\r\n        for(let i=0; i<datas.length; i++) {\r\n            if(checkItem.length === 0 ){\r\n                checkItem.push(Moment(datas[i].date).format(\"MMMM Do YYYY\"))\r\n            }\r\n            else {\r\n                let insert = true\r\n                for(let j=0; j<checkItem.length; j++){\r\n                    if(Moment(datas[i].date).format(\"MMMM Do YYYY\") === checkItem[j]){\r\n                        insert = false\r\n                    }\r\n                }\r\n                if(insert){\r\n                    checkItem.push(Moment(datas[i].date).format(\"MMMM Do YYYY\"))\r\n                }\r\n            }\r\n        }\r\n        return checkItem.map(item => (<Option value={item}>{item}</Option>))\r\n    } \r\n\r\n    const filterData = element => {\r\n        if(element === \"all\") {\r\n            setData(datas)\r\n        }\r\n        else {\r\n            const today = datas.filter(datas => Moment(datas.date).format(\"MMMM Do YYYY\") === element)\r\n            setData(today)\r\n        }\r\n    }\r\n\r\n    const showModal = () => setshow(true)\r\n    return (\r\n        <div>\r\n            <div>\r\n                {show ? <FormData className=\"Modals\" onFinish={addData}/> : null}\r\n            </div>\r\n            <div className=\"navBar\">\r\n                TO-DO LIST\r\n            </div>\r\n            <div className=\"ToolBar\">\r\n                <Button id=\"add\" type=\"primary\" onClick={showModal} >Add To-do list</Button>\r\n                <Select className=\"Box\" defaultValue=\"all\" style={{ width: 200, }} onChange={filterData}>\r\n                    <Option value={\"all\"}>All-List</Option>\r\n                    {loopItem()}\r\n                </Select>\r\n            </div>\r\n            <div>\r\n                <div className={ localStorage.getItem(\"storage\") === '[]'  ? \"defualt\" : \"dashBord\" }>\r\n                    <List datas={dataToday} isCompelte={Complete} updateData={updateData} removeData={removeData}  />\r\n                </div>\r\n            </div>\r\n            <div style={{ height: \"30px\", margin: \"40px\" }}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","import React from 'react'\r\nimport Todo from './Component/Todo'\r\nimport './App.css'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='app'>\r\n      <Todo />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}